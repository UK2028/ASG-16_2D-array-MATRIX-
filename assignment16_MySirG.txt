NAME-UDIT KHANDELWAL				ASSIGNMENT-16


1. Write a program to calculate the sum of two matrices each of order 3x3.

#include<stdio.h>
#include<conio.h>
void sum(int a[3][3],int b[3][3]);
int main()
{
    int a[3][3],b[3][3],i,j;
    printf("enter numbers in matrix1:");
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
            scanf("%d",&a[i][j]);
    }
    printf("enter numbers in matrix2:");
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
            scanf("%d",&b[i][j]);
    }
    printf("matrix 1 is:\n");
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            printf("%d\t",a[i][j]);
        }
        printf("\n");
    }
    printf("matrix 2 is:\n");
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            printf("%d\t",b[i][j]);
        }
        printf("\n");
    }
    sum(a,b);
    getch();
}
void sum(int a[3][3],int b[3][3])
{
    int c[3][3],i,j;
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            c[i][j]=a[i][j]+b[i][j];
        }
    }
    printf("sum of matrix is:\n");
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            printf("%d\t",c[i][j]);
        }
        printf("\n");
    }
}

2. Write a program to calculate the product of two matrices each of order 3x3.

#include<stdio.h>
#include<conio.h>
void product(int a[3][3],int b[3][3]);
int main()
{
    int a[3][3],b[3][3],i,j;
    printf("enter numbers in matrix 1:");
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
            scanf("%d",&a[i][j]);
    }
    printf("enter numbers in matrix 2:");
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
            scanf("%d",&b[i][j]);
    }
    printf("matrix 1 is:\n");
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            printf("%d\t",a[i][j]);
        }
        printf("\n");
    }
    printf("matrix 2 is:\n");
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            printf("%d\t",b[i][j]);
        }
        printf("\n");
    }
    product(a,b);
    getch();
}
void product(int a[3][3],int b[3][3])
{
    int c[3][3],i,j,k;
    printf("product of two matrix is:\n");
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            c[i][j]=0;
            for(k=0;k<3;k++)
            {
                c[i][j]+=(a[i][k]*b[k][j]);
            }
            printf("%d\t",c[i][j]);
        }
        printf("\n");
    }
}

3. Write a program in C to find the transpose of a given matrix.

#include<stdio.h>
#include<conio.h>
void transpose(int a[3][3]);
int main()
{
    int a[3][3],i,j;
    printf("enter numbers in matrix:");
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
            scanf("%d",&a[i][j]);
    }
    printf("matrix is:\n");
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            printf("%d\t",a[i][j]);
        }
        printf("\n");
    }
    transpose(a);
    getch();
}
void transpose(int a[3][3])
{
    int b[3][3],i,j;
    printf("transpose of matrix is:\n");
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            b[i][j]=a[j][i];
            printf("%d\t",b[i][j]);
        }
        printf("\n");
    }
}

4. Write a program in C to find the sum of right diagonals of a matrix.

#include<stdio.h>
#include<conio.h>
int sum_right_diagonal(int n,int m,int a[n][m]);
int main()
{
    int i,j,sum,row,col;
    printf("enter row and column of matrix:");
    scanf("%d %d",&row,&col);
    int a[row][col];
    printf("enter numbers in matrix:");
    for(i=0;i<row;i++)
    {
        for(j=0;j<col;j++)
            scanf("%d",&a[i][j]);
    }
    printf("matrix is:\n");
    for(i=0;i<row;i++)
    {
        for(j=0;j<col;j++)
        {
            printf("%d\t",a[i][j]);
        }
        printf("\n");
    }
    if(row==col)
    {
        sum=sum_right_diagonal(row,col,a);
        printf("sum of elements of right diagonal is: %d",sum);
    }
    else
        printf("matrix is not a square matrix");
    getch();
}
int sum_right_diagonal(int n,int m,int a[n][m])
{
    int i,j,sum=0;
    for(i=0;i<n;i++)
    {
        for(j=0;j<m;j++)
        {
           if(i+j==n-1)
           {
               sum+=a[i][j];
           }
        }
    }
    return sum;
}

5. Write a program in C to find the sum of left diagonals of a matrix.

#include<stdio.h>
#include<conio.h>
int sum_left_diagonal(int n,int m,int a[n][m]);
int main()
{
    int i,j,sum,row,col;
    printf("enter row and column of matrix:");
    scanf("%d %d",&row,&col);
    int a[row][col];
    printf("enter numbers in matrix:");
    for(i=0;i<row;i++)
    {
        for(j=0;j<col;j++)
            scanf("%d",&a[i][j]);
    }
    printf("matrix is:\n");
    for(i=0;i<row;i++)
    {
        for(j=0;j<col;j++)
        {
            printf("%d\t",a[i][j]);
        }
        printf("\n");
    }
    if(row==col)
    {
        sum=sum_left_diagonal(row,col,a);
        printf("sum of elements of left diagonal is: %d",sum);
    }
    else
        printf("matrix is not a square matrix");
    getch();
}
int sum_left_diagonal(int n,int m,int a[n][m])
{
    int i,j,sum=0;
    for(i=0;i<n;i++)
    {
        for(j=0;j<m;j++)
        {
           if(i==j)
           {
               sum+=a[i][j];
           }
        }
    }
    return sum;
}

6. Write a program in C to find the sum of rows and columns of a Matrix.

#include<stdio.h>
#include<conio.h>
int sum_row(int n,int m,int a[n][m],int pos);
int sum_col(int n,int m,int a[n][m],int pos);
int main()
{
    int i,j,row,col;
    printf("enter row and column of matrix:");
    scanf("%d %d",&row,&col);
    int a[row][col];
    printf("enter numbers in matrix:");
    for(i=0;i<row;i++)
    {
        for(j=0;j<col;j++)
            scanf("%d",&a[i][j]);
    }
    printf("matrix is:\n");
    for(i=0;i<row;i++)
    {
        for(j=0;j<col;j++)
        {
            printf("%d\t",a[i][j]);
        }
        printf("\n");
    }
    for(i=0;i<row;i++)
        printf("sum of %d row is: %d\n",i+1,sum_row(row,col,a,i));
    for(i=0;i<col;i++)
        printf("sum of %d column is: %d\n",i+1,sum_col(row,col,a,i));
    getch();
}
int sum_row(int n,int m,int a[n][m],int pos)
{
    int i,sum=0;
    for(i=0;i<m;i++)
    {
        sum+=a[pos][i];
    }
    return sum;
}
int sum_col(int n,int m,int a[n][m],int pos)
{
    int i,sum=0;
    for(i=0;i<n;i++)
    {
        sum+=a[i][pos];
    }
    return sum;
}

7. Write a program in C to print or display the lower triangular of a given matrix.

#include<stdio.h>
#include<conio.h>
void lower_triangle(int n,int m,int a[n][m]);
int main()
{
    int i,j,row,col;
    printf("enter row and column of matrix:");
    scanf("%d %d",&row,&col);
    int a[row][col];
    printf("enter numbers in matrix:");
    for(i=0;i<row;i++)
    {
        for(j=0;j<col;j++)
            scanf("%d",&a[i][j]);
    }
    printf("matrix is:\n");
    for(i=0;i<row;i++)
    {
        for(j=0;j<col;j++)
        {
            printf("%d\t",a[i][j]);
        }
        printf("\n");
    }
    lower_triangle(row,col,a);
    getch();
}
void lower_triangle(int n,int m,int a[n][m])
{
    int i,j,b[n][m];
    for(i=0;i<n;i++)
    {
        for(j=0;j<m;j++)
        {
            if(i>=j)
                b[i][j]=a[i][j];
            else
                b[i][j]=0;
        }
    }
    printf("lower triangle matrix is:\n");
    for(i=0;i<n;i++)
    {
        for(j=0;j<m;j++)
            printf("%d\t",b[i][j]);
        printf("\n");
    }
}

8. Write a program in C to print or display an upper triangular matrix.

#include<stdio.h>
#include<conio.h>
void upper_triangle(int n,int m,int a[n][m]);
int main()
{
    int i,j,row,col;
    printf("enter row and column of matrix:");
    scanf("%d %d",&row,&col);
    int a[row][col];
    printf("enter numbers in matrix:");
    for(i=0;i<row;i++)
    {
        for(j=0;j<col;j++)
            scanf("%d",&a[i][j]);
    }
    printf("matrix is:\n");
    for(i=0;i<row;i++)
    {
        for(j=0;j<col;j++)
        {
            printf("%d\t",a[i][j]);
        }
        printf("\n");
    }
    upper_triangle(row,col,a);
    getch();
}
void upper_triangle(int n,int m,int a[n][m])
{
    int i,j,b[n][m];
    for(i=0;i<n;i++)
    {
        for(j=0;j<m;j++)
        {
            if(i<=j)
                b[i][j]=a[i][j];
            else
                b[i][j]=0;
        }
    }
    printf("upper triangle matrix is:\n");
    for(i=0;i<n;i++)
    {
        for(j=0;j<m;j++)
            printf("%d\t",b[i][j]);
        printf("\n");
    }
}

9. Write a program in C to accept a matrix and determine whether it is a sparse matrix.

#include<stdio.h>
#include<conio.h>
void sparse(int n,int m,int a[n][m]);
int main()
{
    int i,j,row,col;
    printf("enter row and column of matrix:");
    scanf("%d %d",&row,&col);
    int a[row][col];
    printf("enter numbers in matrix:");
    for(i=0;i<row;i++)
    {
        for(j=0;j<col;j++)
            scanf("%d",&a[i][j]);
    }
    printf("matrix is:\n");
    for(i=0;i<row;i++)
    {
        for(j=0;j<col;j++)
        {
            printf("%d\t",a[i][j]);
        }
        printf("\n");
    }
    sparse(row,col,a);
    getch();
}
void sparse(int n,int m,int a[n][m])
{
    int i,j,count=0;
    for(i=0;i<n;i++)
    {
        for(j=0;j<m;j++)
        {
            if(a[i][j]==0)
                count++;
        }
    }
    if(count>(n*m/2))
        printf("matrix is a sparse matrix");
    else
        printf("matrix is not a sparse matrix");
}


10. Write a program in C to find the row with maximum number of 1s.

#include<stdio.h>
#include<conio.h>
void matrix(int n,int m,int a[n][m]);
int main()
{
    int i,j,row,col;
    printf("enter row and column of matrix:");
    scanf("%d %d",&row,&col);
    int a[row][col];
    printf("enter numbers in matrix:");
    for(i=0;i<row;i++)
    {
        for(j=0;j<col;j++)
            scanf("%d",&a[i][j]);
    }
    printf("matrix is:\n");
    for(i=0;i<row;i++)
    {
        for(j=0;j<col;j++)
        {
            printf("%d\t",a[i][j]);
        }
        printf("\n");
    }
    matrix(row,col,a);
    getch();
}
void matrix(int n,int m,int a[n][m])
{
    int i,j,count=0,max_count=0,row=0;
    for(i=0;i<n;i++)
    {
        count=0;
        for(j=0;j<m;j++)
        {
            if(a[i][j]==1)
                count++;
        }
        if(max_count<count)
        {
            max_count=count;
            row=i;
        }
    }
    printf("row with maximum number of 1s is: %d",row+1);
}


